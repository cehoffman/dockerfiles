# Autogenerated configuration file template
{{ with getenv "PDNS_8BIT_DNS" }}
#################################
# 8bit-dns	Allow 8bit dns queries
#
8bit-dns={{.}}

{{ end }}
{{ with getenv "PDNS_ALLOW_AXFR_IPS" }}
#################################
# allow-axfr-ips	Allow zonetransfers only to these subnets
allow-axfr-ips={{.}}

{{ end }}
{{ with getenv "PDNS_ALLOW_DNSUPDATE_FROM" }}
#################################
# allow-dnsupdate-from	A global setting to allow DNS updates from these IP ranges.
allow-dnsupdate-from={{.}}

{{ end }}
{{ with getenv "PDNS_ALLOW_NOTIFY_FROM" }}
#################################
# allow-notify-from	Allow AXFR NOTIFY from these IP ranges. If empty, drop all incoming notifies.
allow-notify-from={{.}}

{{ end }}
{{ with getenv "PDNS_ALLOW_RECURSION" }}
#################################
# allow-recursion	List of subnets that are allowed to recurse
allow-recursion={{.}}

{{ else }}
allow-recursion=127.0.0.1

{{ end }}
{{ with getenv "PDNS_ALLOW_UNSIGNED_NOTIFY" }}
#################################
# allow-unsigned-notify	Allow unsigned notifications for TSIG secured domains
#
allow-unsigned-notify={{.}}

{{ end }}
{{ with getenv "PDNS_ALLOW_UNSIGNED_SUPERMASTER" }}
#################################
# allow-unsigned-supermaster	Allow supermasters to create zones without TSIG signed NOTIFY
#
allow-unsigned-supermaster={{.}}

{{ end }}
{{ with getenv "PDNS_ALSO_NOTIFY" }}
#################################
# also-notify	When notifying a domain, also notify these nameservers
also-notify={{.}}

{{ end }}
{{ with getenv "PDNS_ANY_TO_TCP" }}
#################################
# any-to-tcp	Answer ANY queries with tc=1, shunting to TCP
any-to-tcp={{.}}

{{ end }}
{{ with getenv "PDNS_API" }}
#################################
# api	Enable/disable the REST API
api={{.}}

{{ end }}
{{ with getenv "PDNS_API_KEY" }}
#################################
# api-key	Static pre-shared authentication key for access to the REST API
api-key={{.}}

{{ end }}
{{ with getenv "PDNS_API_LOGFILE" }}
#################################
# api-logfile	Location of the server logfile (used by the REST API)
api-logfile={{.}}

{{ end }}
{{ with getenv "PDNS_API_READONLY" }}
#################################
# api-readonly	Disallow data modification through the REST API when set
api-readonly={{.}}

{{ end }}
{{ with getenv "PDNS_AXFR_LOWER_SERIAL" }}
#################################
# axfr-lower-serial	Also AXFR a zone from a master with a lower serial
#
axfr-lower-serial={{.}}

{{ end }}
{{ with getenv "PDNS_CACHE_TTL" }}
#################################
# cache-ttl	Seconds to store packets in the PacketCache
cache-ttl={{.}}

{{ end }}
{{ with getenv "PDNS_CARBON_INTERVAL" }}
#################################
# carbon-interval	Number of seconds between carbon (graphite) updates
carbon-interval={{.}}

{{ end }}
{{ with getenv "PDNS_CARBON_OURNAME" }}
#################################
# carbon-ourname	If set, overrides our reported hostname for carbon stats
carbon-ourname={{.}}

{{ end }}
{{ with getenv "PDNS_CARBON_SERVER" }}
#################################
# carbon-server	If set, send metrics in carbon (graphite) format to this server
carbon-server={{.}}

{{ end }}
{{ with getenv "PDNS_CHROOT" }}
#################################
# chroot	If set, chroot to this directory for more security
chroot={{.}}

{{ end }}
#################################
# config-dir	Location of configuration directory (pdns.conf)
#
config-dir=/etc/powerdns

{{ with getenv "PDNS_CONFIG_NAME" }}
#################################
# config-name	Name of this virtual configuration - will rename the binary image
config-name={{.}}

{{ end }}
{{ with getenv "PDNS_CONTROL_CONSOLE" }}
#################################
# control-console	Debugging switch - don't use
control-console={{.}}

{{ end }}
#################################
# daemon	Operate as a daemon
#
daemon=no

{{ with getenv "PDNS_DEFAULT_KSK_ALGORITHMS" }}
#################################
# default-ksk-algorithms	Default KSK algorithms
default-ksk-algorithms={{.}}

{{ end }}
{{ with getenv "PDNS_DEFAULT_KSK_SIZE" }}
#################################
# default-ksk-size	Default KSK size (0 means default)
default-ksk-size={{.}}

{{ end }}
{{ with getenv "PDNS_DEFAULT_SOA_EDIT" }}
#################################
# default-soa-edit	Default SOA-EDIT value
default-soa-edit={{.}}

{{ end }}
{{ with getenv "PDNS_DEFAULT_SOA_EDIT_SIGNED" }}
#################################
# default-soa-edit-signed	Default SOA-EDIT value for signed zones
default-soa-edit-signed={{.}}

{{ end }}
{{ with getenv "PDNS_DEFAULT_SOA_MAIL" }}
#################################
# default-soa-mail	mail address to insert in the SOA record if none set in the backend
default-soa-mail={{.}}

{{ end }}
{{ with getenv "PDNS_DEFAULT_SOA_NAME" }}
#################################
# default-soa-name	name to insert in the SOA record if none set in the backend
default-soa-name={{.}}

{{ end }}
{{ with getenv "PDNS_DEFAULT_TTL" }}
#################################
# default-ttl	Seconds a result is valid if not set otherwise
default-ttl={{.}}

{{ end }}
{{ with getenv "PDNS_DEFAULT_ZSK_ALGORITHMS" }}
#################################
# default-zsk-algorithms	Default ZSK algorithms
default-zsk-algorithms={{.}}

{{ end }}
{{ with getenv "PDNS_DEFAULT_ZSK_SIZE" }}
#################################
# default-zsk-size	Default ZSK size (0 means default)
default-zsk-size={{.}}

{{ end }}
{{ with getenv "PDNS_DIRECT_DNSKEY" }}
#################################
# direct-dnskey	Fetch DNSKEY RRs from backend during DNSKEY synthesis
direct-dnskey={{.}}

{{ end }}
{{ with getenv "PDNS_DISABLE_AXFR" }}
#################################
# disable-axfr	Disable zonetransfers but do allow TCP queries
disable-axfr={{.}}

{{ end }}
{{ with getenv "PDNS_DISABLE_AXFR_RECTIFY" }}
#################################
# disable-axfr-rectify	Disable the rectify step during an outgoing AXFR. Only required for regression testing.
disable-axfr-rectify={{.}}

{{ end }}
#################################
# disable-syslog	Disable logging to syslog, useful when running inside a supervisor that logs stdout
#
disable-syslog=yes

{{ with getenv "PDNS_DISABLE_TCP" }}
#################################
# disable-tcp	Do not listen to TCP queries
disable-tcp={{.}}

{{ end }}
{{ with getenv "PDNS_DISTRIBUTOR_THREADS" }}
#################################
# distributor-threads	Default number of Distributor (backend) threads to start
distributor-threads={{.}}

{{ end }}
{{ with getenv "PDNS_DNAME_PROCESSING" }}
#################################
# dname-processing	If we should support DNAME records
dname-processing={{.}}

{{ end }}
{{ with getenv "PDNS_DNSSEC_KEY_CACHE_TTL" }}
#################################
# dnssec-key-cache-ttl	Seconds to cache DNSSEC keys from the database
#
dnssec-key-cache-ttl={{.}}

{{ end }}
{{ with getenv "PDNS_DNSUPDATE" }}
#################################
# dnsupdate	Enable/Disable DNS update (RFC2136) support. Default is no.
dnsupdate={{.}}

{{ end }}
{{ with getenv "PDNS_DO_IPV6_ADDITIONAL_PROCESSING" }}
#################################
# do-ipv6-additional-processing	Do AAAA additional processing
do-ipv6-additional-processing={{.}}

{{ end }}
{{ with getenv "PDNS_DOMAIN_METADATA_CACHE_TTL" }}
#################################
# domain-metadata-cache-ttl	Seconds to cache domain metadata from the database
#
domain-metadata-cache-ttl={{.}}

{{ end }}
{{ with getenv "PDNS_EDNS_SUBNET_PROCESSING" }}
#################################
# edns-subnet-processing	If we should act on EDNS Subnet options
edns-subnet-processing={{.}}

{{ end }}
{{ with getenv "PDNS_ENTROPY_SOURCE" }}
#################################
# entropy-source	If set, read entropy from this file
entropy-source={{.}}

{{ end }}
{{ with getenv "PDNS_EXPERIMENTAL_LUA_POLICY_SCRIPT" }}
#################################
# experimental-lua-policy-script	Lua script for the policy engine
experimental-lua-policy-script={{.}}

{{ end }}
{{ with getenv "PDNS_FORWARD_DNSUPDATE" }}
#################################
# forward-dnsupdate	A global setting to allow DNS update packages that are for a Slave domain, to be forwarded to the master.
forward-dnsupdate={{.}}

{{ end }}
#################################
# guardian	Run within a guardian process
#
guardian=yes

#################################
# include-dir	Include *.conf files from this directory
#
# include-dir=
include-dir=/etc/powerdns/pdns.d

#################################
# launch	Which backends to launch and order to query them in
#
# launch=
launch=gpgsql

#################################
# load-modules	Load this module - supply absolute or relative path
#
# load-modules=

#################################
# local-address	Local IP addresses to which we bind
#
# local-address=0.0.0.0

#################################
# local-address-nonexist-fail	Fail to start if one or more of the local-address's do not exist on this server
#
# local-address-nonexist-fail=yes

#################################
# local-ipv6	Local IP address to which we bind
#
# local-ipv6=::

#################################
# local-ipv6-nonexist-fail	Fail to start if one or more of the local-ipv6 addresses do not exist on this server
#
# local-ipv6-nonexist-fail=yes

#################################
# local-port	The port on which we listen
#
# local-port=53

#################################
# log-dns-details	If PDNS should log DNS non-erroneous details
#
# log-dns-details=no

#################################
# log-dns-queries	If PDNS should log all incoming DNS queries
#
# log-dns-queries=no

#################################
# logging-facility	Log under a specific facility
#
# logging-facility=

#################################
# loglevel	Amount of logging. Higher is more. Do not set below 3
#
# loglevel=4

#################################
# lua-prequery-script	Lua script with prequery handler (DO NOT USE)
#
# lua-prequery-script=

{{ with getenv "PDNS_MASTER" }}
#################################
# master	Act as a master
master={{.}}

{{ end }}
{{ with getenv "PDNS_MAX_CACHE_ENTRIES" }}
#################################
# max-cache-entries	Maximum number of cache entries
max-cache-entries={{.}}

{{ end }}
{{ with getenv "PDNS_MAX_ENT_ENTRIES" }}
#################################
# max-ent-entries	Maximum number of empty non-terminals in a zone
max-ent-entries={{.}}

{{ end }}
{{ with getenv "PDNS_MAX_NSEC3_ITERATIONS" }}
#################################
# max-nsec3-iterations	Limit the number of NSEC3 hash iterations
max-nsec3-iterations={{.}}

{{ end }}
{{ with getenv "PDNS_MAX_QUEUE_LENGTH" }}
#################################
# max-queue-length	Maximum queuelength before considering situation lost
max-queue-length={{.}}

{{ end }}
{{ with getenv "PDNS_MAX_SIGNATURE_CACHE_ENTRIES" }}
#################################
# max-signature-cache-entries	Maximum number of signatures cache entries
max-signature-cache-entries={{.}}

{{ end }}
{{ with getenv "PDNS_MAX_TCP_CONNECTIONS" }}
#################################
# max-tcp-connections	Maximum number of TCP connections
max-tcp-connections={{.}}

{{ end }}
#################################
# module-dir	Default directory for modules
#
# module-dir=/usr/lib/x86_64-linux-gnu/pdns

{{ with getenv "PDNS_NEGQUERY_CACHE_TTL" }}
#################################
# negquery-cache-ttl	Seconds to store negative query results in the QueryCache
negquery-cache-ttl={{.}}

{{ end }}
#################################
# no-shuffle	Set this to prevent random shuffling of answers - for regression testing
#
# no-shuffle=off

{{ with getenv "PDNS_NON_LOCAL_BIND" }}
#################################
# non-local-bind	Enable binding to non-local addresses by using FREEBIND / BINDANY socket options
non-local-bind={{.}}

{{ end }}
{{ with getenv "PDNS_ONLY_NOTIFY" }}
#################################
# only-notify	Only send AXFR NOTIFY to these IP addresses or netmasks
only-notify={{.}}

{{ end }}
{{ with getenv "PDNS_OUT_OF_ZONE_ADDITIONAL_PROCESSING" }}
#################################
# out-of-zone-additional-processing	Do out of zone additional processing
out-of-zone-additional-processing={{.}}

{{ end }}
{{ with getenv "PDNS_OUTGOING_AXFR_EXPAND_ALIAS" }}
#################################
# outgoing-axfr-expand-alias	Expand ALIAS records during outgoing AXFR
#
outgoing-axfr-expand-alias={{.}}

{{ end }}
{{ with getenv "PDNS_OVERLOAD_QUEUE_LENGTH" }}
#################################
# overload-queue-length	Maximum queuelength moving to packetcache only
overload-queue-length={{.}}

{{ end }}
{{ with getenv "PDNS_PREVENT_SELF_NOTIFICATION" }}
#################################
# prevent-self-notification	Don't send notifications to what we think is ourself
prevent-self-notification={{.}}

{{ end }}
{{ with getenv "PDNS_QUERY_CACHE_TTL" }}
#################################
# query-cache-ttl	Seconds to store query results in the QueryCache
query-cache-ttl={{.}}

{{ end }}
{{ with getenv "PDNS_QUERY_LOCAL_ADDRESS" }}
#################################
# query-local-address	Source IP address for sending queries
query-local-address={{.}}

{{ end }}
{{ with getenv "PDNS_QUERY_LOCAL_ADDRESS6" }}
#################################
# query-local-address6	Source IPv6 address for sending queries
query-local-address6={{.}}

{{ end }}
{{ with getenv "PDNS_QUERY_LOGGING" }}
#################################
# query-logging	Hint backends that queries should be logged
query-logging={{.}}

{{ end }}
{{ with getenv "PDNS_QUEUE_LIMIT" }}
#################################
# queue-limit	Maximum number of milliseconds to queue a query
queue-limit={{.}}

{{ end }}
{{ with getenv "PDNS_RECEIVER_THREADS" }}
#################################
# receiver-threads	Default number of receiver threads to start
receiver-threads={{.}}

{{ end }}
{{ with getenv "PDNS_RECURSIVE_CACHE_TTL" }}
#################################
# recursive-cache-ttl	Seconds to store packets for recursive queries in the PacketCache
recursive-cache-ttl={{.}}

{{ end }}
{{ with getenv "PDNS_RECURSOR" }}
#################################
# recursor	If recursion is desired, IP address of a recursing nameserver
recursor={{.}}

{{ end }}
{{ with getenv "PDNS_RETRIEVAL_THREADS" }}
#################################
# retrieval-threads	Number of AXFR-retrieval threads for slave operation
retrieval-threads={{.}}

{{ end }}
{{ with getenv "PDNS_REUSEPORT" }}
#################################
# reuseport	Enable higher performance on compliant kernels by using SO_REUSEPORT allowing each receiver thread to open its own socket
reuseport={{.}}

{{ else }}
reuseport=yes

{{ end }}
{{ with getenv "PDNS_SECURITY_POLL_SUFFIX" }}
#################################
# security-poll-suffix	Domain name from which to query security update notifications
security-poll-suffix={{.}}

{{ end }}
{{ with getenv "PDNS_SERVER_ID" }}
#################################
# server-id	Returned when queried for 'server.id' TXT or NSID, defaults to hostname - disabled or custom
server-id={{.}}

{{ end }}
#################################
# setgid	If set, change group id to this gid for more security
#
setgid=pdns

#################################
# setuid	If set, change user id to this uid for more security
#
setuid=pdns

{{ with getenv "PDNS_SIGNING_THREADS" }}
#################################
# signing-threads	Default number of signer threads to start
signing-threads={{.}}

{{ end }}
{{ with getenv "PDNS_SLAVE" }}
#################################
# slave	Act as a slave
slave={{.}}

{{ end }}
{{ with getenv "PDNS_SLAVE_CYCLE_INTERVAL" }}
#################################
# slave-cycle-interval	Schedule slave freshness checks once every .. seconds
slave-cycle-interval={{.}}

{{ end }}
{{ with getenv "PDNS_SLAVE_RENOTIFY" }}
#################################
# slave-renotify	If we should send out notifications for slaved updates
slave-renotify={{.}}

{{ end }}
{{ with getenv "PDNS_SOA_EXPIRE_DEFAULT" }}
#################################
# soa-expire-default	Default SOA expire
soa-expire-default={{.}}

{{ end }}
{{ with getenv "PDNS_SOA_MINIMUM_TTL" }}
#################################
# soa-minimum-ttl	Default SOA minimum ttl
soa-minimum-ttl={{.}}

{{ end }}
{{ with getenv "PDNS_SOA_REFRESH_DEFAULT" }}
#################################
# soa-refresh-default	Default SOA refresh
soa-refresh-default={{.}}

{{ end }}
{{ with getenv "PDNS_SOA_RETRY_DEFAULT" }}
#################################
# soa-retry-default	Default SOA retry
soa-retry-default={{.}}

{{ end }}
#################################
# socket-dir	Where the controlsocket will live, /var/run when unset and not chrooted
#
# socket-dir=

#################################
# tcp-control-address	If set, PowerDNS can be controlled over TCP on this address
#
# tcp-control-address=

#################################
# tcp-control-port	If set, PowerDNS can be controlled over TCP on this address
#
# tcp-control-port=53000

#################################
# tcp-control-range	If set, remote control of PowerDNS is possible over these networks only
#
# tcp-control-range=127.0.0.0/8, 10.0.0.0/8, 192.168.0.0/16, 172.16.0.0/12, ::1/128, fe80::/10

#################################
# tcp-control-secret	If set, PowerDNS can be controlled over TCP after passing this secret
#
# tcp-control-secret=

#################################
# traceback-handler	Enable the traceback handler (Linux only)
#
# traceback-handler=yes

#################################
# trusted-notification-proxy	IP address of incoming notification proxy
#
# trusted-notification-proxy=

{{ with getenv "PDNS_UDP_TRUNCATION_THRESHOLD" }}
#################################
# udp-truncation-threshold	Maximum UDP response size before we truncate
udp-truncation-threshold={{.}}

{{ end }}
{{ with getenv "PDNS_VERSION_STRING" }}
#################################
# version-string	PowerDNS version in packets - full, anonymous, powerdns or custom
version-string={{.}}

{{ else }}
version-string=anonymous

{{ end }}
{{ with getenv "PDNS_WEBSERVER" }}
#################################
# webserver	Start a webserver for monitoring
webserver={{.}}

{{ end }}
{{ with getenv "PDNS_WEBSERVER_ADDRESS" }}
#################################
# webserver-address	IP Address of webserver to listen on
webserver-address={{.}}

{{ end }}
{{ with getenv "PDNS_WEBSERVER_ALLOW_FROM" }}
#################################
# webserver-allow-from	Webserver access is only allowed from these subnets
webserver-allow-from={{.}}

{{ end }}
{{ with getenv "PDNS_WEBSERVER_PASSWORD" }}
#################################
# webserver-password	Password required for accessing the webserver
webserver-password={{.}}

{{ end }}
{{ with getenv "PDNS_WEBSERVER_PORT" }}
#################################
# webserver-port	Port of webserver to listen on
webserver-port={{.}}

{{ else }}
webserver-port=80

{{ end }}
{{ with getenv "PDNS_WEBSERVER_PRINT_ARGUMENTS" }}
#################################
# webserver-print-arguments	If the webserver should print arguments
webserver-print-arguments={{.}}

{{ end }}
#################################
# write-pid	Write a PID file
#
# write-pid=yes
write-pid=no

{{ with getenv "PDNS_XFR_MAX_RECEIVED_MBYTES" }}
#################################
# xfr-max-received-mbytes	Maximum number of megabytes received from an incoming XFR
#
xfr-max-received-mbytes={{.}}

{{ end }}
{{ with getenv "PDNS_GPGSQL_HOST" }}
gpgsql-host={{.}}

{{end}}
{{ with getenv "PDNS_GPGSQL_PORT" }}
gpgsql-port={{.}}

{{end}}
{{ with getenv "PDNS_GPGSQL_DBNAME" }}
gpgsql-dbname={{.}}

{{end}}
{{ with getenv "PDNS_GPGSQL_USER" }}
gpgsql-user={{.}}

{{end}}
{{ with getenv "PDNS_GPGSQL_PASSWORD" }}
gpgsql-password={{.}}

{{end}}
{{ with getenv "PDNS_GPGSQL_DNSSEC" }}
gpgsql-dnssec={{.}}

{{end}}
